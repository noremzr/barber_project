// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using barberDLL.Contexts;

#nullable disable

namespace barberDLL.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("barberDLL.Models.Users.UserModel", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.Property<string>("CompleteName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("completeName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("Existe")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBarber")
                        .HasColumnType("bit")
                        .HasColumnName("isBarber");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("streetName");

                    b.HasKey("UserName");

                    b.ToTable("tUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
